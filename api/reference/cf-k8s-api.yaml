apiVersion: v1
kind: Namespace
metadata:
  name: cf-k8s-api-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cf-k8s-api-cf-admin-serviceaccount
  namespace: cf-k8s-api-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: cf-k8s-api-cf-admin-clusterrole
rules:
- apiGroups:
  - ""
  resources:
  - groups
  - serviceaccounts
  - users
  verbs:
  - impersonate
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods/status
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets/status
  - serviceaccounts/status
  verbs:
  - get
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - hnc.x-k8s.io
  resources:
  - hierarchyconfigurations
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - hnc.x-k8s.io
  resources:
  - subnamespaceanchors
  verbs:
  - create
  - delete
  - list
  - watch
- apiGroups:
  - kpack.io
  resources:
  - clusterbuilders
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - kpack.io
  resources:
  - clusterbuilders/status
  verbs:
  - get
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.cloudfoundry.org
  resources:
  - cfdomains
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.cloudfoundry.org
  resources:
  - cfdomains/status
  verbs:
  - get
- apiGroups:
  - networking.cloudfoundry.org
  resources:
  - cfroutes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.cloudfoundry.org
  resources:
  - cfroutes/status
  verbs:
  - get
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - create
  - list
- apiGroups:
  - services.cloudfoundry.org
  resources:
  - cfservicebindings
  verbs:
  - create
  - delete
  - get
  - list
- apiGroups:
  - services.cloudfoundry.org
  resources:
  - cfserviceinstances
  verbs:
  - create
  - delete
  - get
  - list
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfapps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfapps/status
  verbs:
  - get
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfbuilds
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfbuilds/status
  verbs:
  - get
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfpackages
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfpackages/status
  verbs:
  - get
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfprocesses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - workloads.cloudfoundry.org
  resources:
  - cfprocesses/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cf-k8s-api-cf-admin-clusterrolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cf-k8s-api-cf-admin-clusterrole
subjects:
- kind: ServiceAccount
  name: cf-k8s-api-cf-admin-serviceaccount
  namespace: cf-k8s-api-system
---
apiVersion: v1
data:
  cf_k8s_api_config.yaml: |
    externalFQDN: "api.example.org"
    internalPort: 9000

    rootNamespace: cf
    defaultLifecycleConfig:
      type: buildpack
      stack: cflinuxfs3
      stagingMemoryMB: 1024
      stagingDiskMB: 1024
    packageRegistryBase: gcr.io/cf-relint-greengrass/cf-k8s-controllers/kpack/beta
    packageRegistrySecretName: image-registry-credentials # Create this secret in the rootNamespace
    clusterBuilderName: cf-kpack-cluster-builder
    defaultDomainName: apps.example.org
  role_mappings_config.yaml: |
    roleMappings:
      admin:
        name: cf-k8s-controllers-admin
        propagate: true
      admin_read_only:
        name: cf-k8s-controllers-admin-read-only
        propagate: true
      cf_user:
        name: cf-k8s-controllers-root-namespace-user
        propagate: false
      global_auditor:
        name: cf-k8s-controllers-global-auditor
        propagate: true
      organization_auditor:
        name: cf-k8s-controllers-organization-auditor
        propagate: false
      organization_billing_manager:
        name: cf-k8s-controllers-organization-billing-manager
        propagate: false
      organization_manager:
        name: cf-k8s-controllers-organization-manager
        propagate: true
      organization_user:
        name: cf-k8s-controllers-organization-user
        propagate: false
      space_auditor:
        name: cf-k8s-controllers-space-auditor
        propagate: false
      space_developer:
        name: cf-k8s-controllers-space-developer
        propagate: false
      space_manager:
        name: cf-k8s-controllers-space-manager
        propagate: false
      space_supporter:
        name: cf-k8s-controllers-space-supporter
        propagate: false
kind: ConfigMap
metadata:
  name: cf-k8s-api-config-446hhfhb5b
  namespace: cf-k8s-api-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: cf-k8s-api
  name: cf-k8s-api-svc
  namespace: cf-k8s-api-system
spec:
  ports:
  - name: web
    port: 443
    protocol: TCP
    targetPort: web
  selector:
    app: cf-k8s-api
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cf-k8s-api
  name: cf-k8s-api-deployment
  namespace: cf-k8s-api-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cf-k8s-api
  strategy: {}
  template:
    metadata:
      labels:
        app: cf-k8s-api
    spec:
      containers:
      - env:
        - name: APICONFIG
          value: /etc/cf-k8s-api-config
        image: cloudfoundry/cf-k8s-api:latest
        name: cf-k8s-api
        ports:
        - containerPort: 9000
          name: web
        resources: {}
        volumeMounts:
        - mountPath: /etc/cf-k8s-api-config
          name: cf-k8s-api-config
          readOnly: true
        - mountPath: /etc/server-cert
          name: server-cert-vol
          readOnly: true
      serviceAccountName: cf-k8s-api-cf-admin-serviceaccount
      volumes:
      - configMap:
          name: cf-k8s-api-config-446hhfhb5b
        name: cf-k8s-api-config
      - name: server-cert-vol
        secret:
          optional: false
          secretName: server-cert
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.k8s.cloudfoundry.org
spec:
  caBundle: |-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURsekNDQW4rZ0F3SUJBZ0lVU2VIMjZLendk
    aVVuNy9jUU95emVCaTVNRWtvd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0RURUxNQWtHQTFVRUJoTUNT
    VlF3SGhjTk1qSXdNekl4TVRZek9UQTJXaGNOTWpJd05ESXdNVFl6T1RBMgpXakFOTVFzd0NRWURW
    UVFHRXdKSlZEQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCCkFPVnN2
    WXNyMVl0UkJpUW9RT0hFYUl5ZkRib1h3LzRweUkydDh3SnhGeHNjbHZNZEF6eWlRU0xPUEVUb3J5
    QnIKS01GY0lEMWpTKzR4ZEt0YzI0S2FnZnlDUjl3TXBrQUFpTUtPTzh6N0ZoYVNzTHpoL1IzdmpN
    ZDhlSHBpM0F0cwptQ0x4ei91aGdyTCtjR2VCc2NQY1FlcGRxTUVtRnorU1BmWTBGK0xjd01ZMVlE
    cy9iTFE0K3dtNmJ4SmJndERoCnVDR2didFNEYlVrU2h2OG9OQWV6TjBwOGZ2ZHZnekhmVkVWRExZ
    QUZIZ25VZS8rWVN0TkU3LzYxbXJyK2FWZWUKcFZCZ3YvWFZFbVBnYUtCRUYwWms4MjNUdWlqUnlP
    Y041aEpqQjZEOVJjK3lGWEZVaEZieWRBV2NLaFlQeXJZRwo3WXN4UzQ3OU9FMGF3OUgxakE5TnQ2
    Y0NBd0VBQWFPQjdqQ0I2ekFkQmdOVkhRNEVGZ1FVTUtITXV4cjJRRHJPCkNOWUJVZ1JxRjNERGNU
    Y3dId1lEVlIwakJCZ3dGb0FVTUtITXV4cjJRRHJPQ05ZQlVnUnFGM0REY1Rjd0R3WUQKVlIwVEFR
    SC9CQVV3QXdFQi96Q0Jsd1lEVlIwUkJJR1BNSUdNZ2c1alppMXJPSE10WVhCcExYTjJZNElnWTJZ
    dAphemh6TFdGd2FTMXpkbU11WTJZdGF6aHpMV0Z3YVMxemVYTjBaVzJDSkdObUxXczRjeTFoY0dr
    dGMzWmpMbU5tCkxXczRjeTFoY0drdGMzbHpkR1Z0TG5OMlk0SXlZMll0YXpoekxXRndhUzF6ZG1N
    dVkyWXRhemh6TFdGd2FTMXoKZVhOMFpXMHVjM1pqTG1Oc2RYTjBaWEl1Ykc5allXd3dEUVlKS29a
    SWh2Y05BUUVMQlFBRGdnRUJBRjdZeTlONwpqaUdjVlpZOHNxWXRabjhsUFExNUxuOTNFdC9xOHJy
    eWhteW1OOXRrVGtDbUc5ZFdRNlJreWJ6ZThNanlKcWs5CnlZVDdaam1xR2orRGc0TnRIemdLc1h4
    aU1oRHJIOFZXMHh2T3lsN3RtSExxSGVQdGs3ZTJIa29sc2psK0ErNVoKU3BxRUNsWkZ3U2lYbFFj
    ZWE5UG5KeFlSbHNLZXQ2ZTdWZnI0U09WUTBBYnhTbUE1ZHpzVXpSZXZnVFF3QmdWRgoyM2xCRFJX
    YzRzQmJiL083Z3BtcWtIUjNSZXNKNEpPYU9mVDhpK2I2NEJTT2k2dnJVVjJ5b213ckFlNDZNU1dB
    CnJQckhLaUk0K3dNSEp2VWFWRlZHZHJQZmxJZ2Z3ODlXZllyOHUrOXMyR0gvTDB2ajBDZDJtY3RZ
    b0RlSktZQlMKYzU4QWZTL3drTU5RcjFzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  group: k8s.cloudfoundry.org
  groupPriorityMinimum: 1000
  service:
    name: cf-k8s-api-svc
    namespace: cf-k8s-api-system
  version: v1alpha1
  versionPriority: 15
---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  labels:
    app: cf-k8s-api
  name: cf-k8s-api-proxy
  namespace: cf-k8s-api-system
spec:
  routes:
  - conditions:
    - prefix: /
    services:
    - name: cf-k8s-api-svc
      port: 443
    timeoutPolicy:
      response: 5m
  virtualhost:
    fqdn: ""
    tls:
      secretName: cf-k8s-api-ingress-cert
